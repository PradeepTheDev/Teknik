@model Teknik.Areas.Paste.ViewModels.PasteViewModel

@{ 
    Layout = null;
    string format = Model.Syntax;
    string formatName = "Text";
    bool useFormat = true;
    bool autoDetect = false;

    if (string.IsNullOrEmpty(format))
    {
        useFormat = false;
    }
    else if (format == "auto-detect")
    {
        formatName = "Auto Detect";
        autoDetect = true;
    }
    else if (!HighlightHelper.Languages.ContainsKey(format))
    {
        useFormat = false;
    }
    else
    {
        formatName = HighlightHelper.Languages[format];
    }
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="description" content="@Config.Description" />
    <meta name="author" content="@Config.Author" />
    <title>@ViewBag.Title</title>
    <link rel="shortcut icon" href="/Images/favicon.ico" type="image/x-icon" />    

    <bundle src="css/paste.min.css" append-version="true"></bundle>
</head>
<body data-twttr-rendered="true">    
    <script>
        var format = '@format';
        var useFormat = @(useFormat.ToString().ToLower());
        var autoDetect = @(autoDetect.ToString().ToLower());
        var highlightWorkerSrc = '@Url.FullURL("~/js/highlight.worker.min.js")';
        var highlightSrc = '@Url.FullURL("~/js/highlight.min.js")';
    </script>

    <pre><code id="code">@Html.Raw(Model.Content)</code></pre>
    
    <bundle src="js/common.min.js" append-version="true"></bundle>
    <bundle src="js/paste.view.min.js" append-version="true"></bundle>

    <script>
        $(document).ready(function () { pageloadDoTimer(); });
    </script>
</body>
</html>
