@model Teknik.Areas.Paste.ViewModels.PasteViewModel

@using Teknik.Areas.Vault.Models

<bundle src="css/paste.min.css" append-version="true"></bundle>

@{ 
    string format = Model.Syntax;
    string formatName = "Text";
    bool useFormat = true;
    bool autoDetect = false;

    if (string.IsNullOrEmpty(format))
    {
        useFormat = false;
    }
    else if (format == "auto-detect")
    {
        formatName = "Auto Detect";
        autoDetect = true;
    }
    else if (!HighlightHelper.Languages.ContainsKey(format))
    {
        useFormat = false;
    }
    else
    {
        formatName = HighlightHelper.Languages[format];
    }
}

<script>
    var format = '@format';
    var useFormat = @(useFormat.ToString().ToLower());
    var autoDetect = @(autoDetect.ToString().ToLower());
    var createVaultURL = '@Url.SubRouteUrl("vault", "Vault.NewVaultFromService", new { type = "Paste" })';
    var highlightWorkerSrc = '@Url.FullURL("~/js/highlight.worker.min.js")';
    var highlightSrc = '@Url.FullURL("~/js/highlight.min.js")';
</script>

<div class="container">
    <div class="row text-center">
        <div class="col-sm-12 text-center">
            <h2><b>@((string.IsNullOrEmpty(Model.Title)) ? "Untitled" : Model.Title)</b> <small>Posted on <time datetime="@Model.DatePosted.ToString("s")">@Model.DatePosted.ToString("dddd, MMMM d, yyyy") at @Model.DatePosted.ToString("h:mm:ss tt")</time> - Format: <b id="syntaxLanguage">@(formatName)</b></small></h2>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-sm-12 pull-left">
            <div class="btn-group" role="group">
                <a role="button" class="btn btn-default" href="@Url.SubRouteUrl("p", "Paste.Simple", new { url = Model.Url })">Simple</a>
                <a role="button" class="btn btn-default" href="@Url.SubRouteUrl("p", "Paste.Raw", new { url = Model.Url })">Raw</a>
                <a role="button" class="btn btn-default" href="@Url.SubRouteUrl("p", "Paste.Download", new { url = Model.Url })">Download</a>
                <button type="button" class="btn btn-default" id="create-vault" data-paste-url="@Model.Url" data-paste-title="@((string.IsNullOrEmpty(Model.Title)) ? "Untitled" : Model.Title)">Create Vault</button>
                @if (User.Identity.IsAuthenticated && Model.Vaults != null && Model.Vaults.Any())
                {
                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">Add to Vault <span class="caret"></span></button>
                    <ul class="dropdown-menu pull-right" id="add-to-vault-menu">
                        @foreach (Vault item in Model.Vaults)
                        {
                            <li><a href="#" class="add-to-vault" data-add-to-vault-url="@Url.SubRouteUrl("vault", "Vault.EditVault", new { url = item.Url, type = "Paste" })" data-paste-url="@Model.Url" data-paste-title="@((string.IsNullOrEmpty(Model.Title)) ? "Untitled" : Model.Title)">@item.Title</a></li>
                        }
                    </ul>
                }
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-12">
            <pre><code id="code">@Model.Content</code></pre>
        </div>
    </div>
</div>

<bundle src="js/paste.view.min.js" append-version="true"></bundle>
